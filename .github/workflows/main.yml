name: Build - Test - Deploy

on:
  push:
    branches:
      - main

jobs:
  # lighthouse:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Audit URLs using Lighthouse
  #       uses: treosh/lighthouse-ci-action@v10
  #       with:
  #         urls: |
  #           https://richardford.online
  build_test:
    runs-on: ubuntu-latest
    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2'
    - uses: actions/checkout@v3
    - name: Change Directory
      run: cd blog
    - name: Copy .env
      run: |
        cd blog
        php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: List Files
      run: ls -l
    - name: Install Dependencies
      run: |
        cd blog
        composer update
        composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: |
        cd blog
        php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
  # deploy:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Set up SSH
  #     run: |
  #       mkdir -p ~/.ssh/
  #       echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
  #       chmod 600 ~/.ssh/id_rsa
  #       ssh-keyscan -H ${{secrets.SERVER_IP_ADDRESS}} >> ~/.ssh/known_hosts

  #   - name: Deploy to Digital Ocean
  #     run: |
  #       ssh -o StrictHostKeyChecking=no root@${{secrets.SERVER_IP_ADDRESS}} << 'ENDSSH'
  #       cd /var/www/Blog/blog
  #       git pull origin main
  #       composer install
  #       npm install
  #       npm run build
  #       php artisan migrate
  #       php artisan cache:clear
  #       php artisan config:clear
  #       ENDSSH
